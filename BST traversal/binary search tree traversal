#include<stdio.h>
#include<stdlib.h>
struct node
{
    int data ;
    struct node*left;
    struct node*right;
};
struct node*root=NULL,*cur,*temp;
struct node*create()
{
    cur = (struct node*)malloc(sizeof(struct node));
    printf("enter data");
    scanf("%d",&(cur->data));
    cur->left=NULL;
    cur->right=NULL;
    if(root == NULL)
        root = cur;
    else{
        temp = root;
        while(temp != NULL){
                	if(cur->data < temp->data && temp->left==NULL){
                            temp->left = cur;
                            return root;
                }
                else if(cur->data < temp->data && temp->left != NULL){
                            temp=temp->left;
                }
                else if(cur->data > temp->data && temp->right == NULL){
                        temp->right=cur;
                        return root;
                }
                else if(cur->data > temp->data && temp->right != NULL){
                        temp=temp->right;
                    }
        }
          
return root;
}
}
void preorder(struct node*root)
{
        if(root != NULL)
        {
                printf("%d\n",root->data);
                preorder(root->left);
                preorder(root->right);
        }
}
void inorder(struct node*root){
        if(root != NULL){
                inorder(root->left);
                printf("%d\n",root->data);
                inorder(root->right);
        }
}
void postorder(struct node*root){
        if(root!=NULL){
                postorder(root->left);
                postorder(root->right);
                printf("%d\n",root->data);
        }
}
int main(){
        int ch;
        while(1){
                printf("1:create\n 2:preorder\n 3:inorder\n 4:postorder\n 5:exit");
                printf("enter your choice");
                scanf("%d",&ch);
                switch(ch){
                case 1: create();
                        break;
                case 2: preorder(root);
                        break;
                case 3: inorder(root);
                        break;
                case 4: postorder(root);
                        break;
                case 5: exit(0);

        	}
        }
		}
    
    
    OUTPUT:-
    1:create
 2:preorder
 3:inorder
 4:postorder
 5:exit
 enter your choice.. 1
enter data4
1:create
 2:preorder
 3:inorder
 4:postorder
 5:exit
 enter your choice.. 1
enter data3
1:create
 2:preorder
 3:inorder
 4:postorder
 5:exit
 enter your choice.. 1
enter data45
1:create
 2:preorder
 3:inorder
 4:postorder
 5:exit
 enter your choice.. 1
enter data6
1:create
 2:preorder
 3:inorder
 4:postorder
 5:exit
 enter your choice.. 1
enter data8
1:create
 2:preorder
 3:inorder
 4:postorder
 5:exit
 enter your choice.. 2
4
3
45
6
8
1:create
 2:preorder
 3:inorder
 4:postorder
 5:exit
 enter your choice.. 3
3
4
6
8
45
1:create
 2:preorder
 3:inorder
 4:postorder
 5:exit
 enter your choice.. 4
3
8
6
45
4
1:create
 2:preorder
 3:inorder
 4:postorder
 5:exit
 enter your choice..

